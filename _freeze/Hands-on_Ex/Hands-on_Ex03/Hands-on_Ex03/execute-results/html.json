{
  "hash": "b151a1b959b58764da0640aeb0d7d800",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 3\"\nauthor: \"Sei Sar Hla Kyi\"\ndate: \"3 September 2024\"\ndate-modified: \"3 September 2024\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n# **7  Network Constrained Spatial Point Patterns Analysis**\n\nInstall and launch the four R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spNetwork, tmap, tidyverse)\n```\n:::\n\n\nImport data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork <- st_read(dsn=\"data/geospatial\", \n                   layer=\"Punggol_St\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Punggol_St' from data source \n  `/Users/seesarhlakyi/Desktop/ssrhk/ISSS626-GAA/Hands-on_Ex/Hands-on_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare <- st_read(dsn=\"data/geospatial\",\n                     layer=\"Punggol_CC\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Punggol_CC' from data source \n  `/Users/seesarhlakyi/Desktop/ssrhk/ISSS626-GAA/Hands-on_Ex/Hands-on_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n```\n\n\n:::\n:::\n\n\n## **Visualising the Geospatial Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(network))\nplot(childcare,add=T,col='red',pch = 19)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(childcare) + \n  tm_dots() + \n  tm_shape(network) +\n  tm_lines()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## **Network KDE (NKDE) Analysis**\n\nNotes: Unlike traditional KDE, which assumes events can occur anywhere in a continuous space, NKDE constrains the analysis to the network structure, providing a more accurate reflection of the spatial distribution of events.\n\nNKDE smooths the distribution of observed events along the network. This smoothing accounts for the distance between points along the network, rather than Euclidean distance, which is crucial for correctly analyzing patterns in environments where movement is restricted to specific paths.\n\n### **Preparing the lixels objects**\n\nSpatialLines object need to be cut into lixels with a specified minimal distance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlixels <- lixelize_lines(network, \n                         700, \n                         mindist = 375)\n```\n:::\n\n\n-   The length of a lixel, *lx_length* is set to 700m, and\n\n-   The minimum length of a lixel, *mindist* is set to 350m.\n\nAfter cut, if the length of the final lixel is shorter than the minimum distance, then it is added to the previous lixel. If NULL, then mindist = maxdist/10.\n\n### **Generating line centre points**\n\nPoints are located at center of the line based on the length of the line\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples <- lines_center(lixels) \n```\n:::\n\n\n### **Computing NKDE**\n\nConvert the `childcare` geometry to 2D:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare <- st_zm(childcare)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndensities <- nkde(network, \n                  events = childcare,\n                  w = rep(1, nrow(childcare)),\n                  samples = samples,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, \n                  sparse = TRUE,\n                  verbose = FALSE)\n```\n:::\n\n\n-   *method* argument indicates that **simple** method is used to calculate the NKDE. Currently, spNetwork support three popular methods, they are:\n\n    -   method=“simple”. The distances between events and sampling points are replaced by network distances, and the formula of the kernel is adapted to calculate the density over a linear unit instead of an areal unit.\n\n    -   method=“discontinuous”. which equally “divides” the mass density of an event at intersections of lixels.\n\n    -   method=“continuous”. If the discontinuous method is unbiased, it leads to a discontinuous kernel function which is a bit counter-intuitive. that divide the mass of the density at intersection but adjusts the density before the intersection to make the function continuous.\n\n### Visualising NKDE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples$density <- densities\nlixels$density <- densities\n```\n:::\n\n\nRescaling to help mapping\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples$density <- samples$density*1000\nlixels$density <- lixels$density*1000\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(childcare)+\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## **Network Constrained G- and K-Function Analysis**\n\n**Ho: The observed spatial point events (i.e distribution of childcare centres) are uniformly distributed over a street network in Punggol Planning Area.**\n\nThe CSR test is based on the assumption of the binomial point process which implies the hypothesis that the childcare centres are randomly and independently distributed over the street network.\n\nIf this hypothesis is rejected, we may infer that the distribution of childcare centres are spatially interacting and dependent on each other; as a result, they may form nonrandom patterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkfun_childcare <- kfunctions(network, \n                             childcare,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 50, \n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkfun_childcare$plotk\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n**Conclusion:** Because the blue line between the distance of 250m-400m are below the gray area, we can infer that the childcare centres in Punggol planning area resemble regular pattern at the distance of 250m-400m. After 400m, the observed distribution of childcare centers along the network does not significantly deviate from the random distribution at any of the analyzed scales. In other words, there's no strong evidence of either clustering or regular spacing of childcare centers within the analyzed distance range on the network.\n\n-   **Null Hypothesis:** The observed spatial distribution of childcare centers is consistent with a random distribution over the street network in Punggol Planning Area.\n\n-   Since the empirical K-function does not show significant deviation from the confidence envelope, *we would not reject the null hypothesis*. The distribution of childcare centers appears to be random along the network, without any significant clustering or regularity at the scales analyzed.\n",
    "supporting": [
      "Hands-on_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}