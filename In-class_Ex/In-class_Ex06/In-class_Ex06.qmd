---
title: "In Class Exercise 6"
author: "Sei Sar Hla Kyi"
date: "30 September 2024"
date-modified: "`r Sys.Date()`"
execute: 
  eval: true
  echo: true
  message: false
  freeze: true
  warning: false
---

# Emerging Hot Spot Analysis

-   Change according to time

-   Spatio-temporal analysis method to reveal and describe how hotspot evolve over time.

## Load packages

```{r}
pacman::p_load(dplyr,sf, sfdep, tmap, plotly, tidyverse)
```

## Import Geospatial Data

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

## Import Aspatial Data

```{r}
GDPPC <- read_csv("data/aspatial/Hunan_GDPPC.csv")
```

## Creating Time Series Cube

-   tidyverse r object

-   3D data, only useful when space dimension is constant CANNOT handle dynamic spacetime.

-   If boundary change (e.g. forest fire), CANNOT use.

-   ONLY attribute change over time.

```{r}
GDPPC_st <- spacetime(GDPPC, hunan, .loc_col = "County", .time_col = "Year")
```

Cannot use original time/date field since it is not integer. Convert date into integer for .time_col. lubridate for the number

```{r}
is_spacetime_cube(GDPPC_st)
```

## Computing Gi\*

### Deriving spatial weights

```{r}
GDPPC_nb <- GDPPC_st %>%
  activate("geometry") %>%
  mutate (nb = include_self(
    st_contiguity(geometry)),
    wt = st_inverse_distance(nb,
                             geometry,
                             scale = 1,
                             alpha = 1),
    .before = 1) %>%
  set_nbs("nb") %>%
  set_wts("wt")
```

```{r}
gi_stars <- GDPPC_nb %>%
  group_by(Year) %>%
  mutate(gi_star = local_gstar_perm(
    GDPPC,nb,wt)) %>%
  tidyr::unnest(gi_star) #Unnest to flatten it into datatable form
```

## Mann Kendall Test

-   perform analysis on individual area

-   function that only increase(or decrease) and never changes direction.

-   Ho: No monotonic trend

-   H1: Monotonic trend is present

```{r}
cbg <- gi_stars %>%
  ungroup() %>% #It is a cube, need to pick out
  filter (County == "Changsha") %>%
  select (County, Year, gi_star)
```

```{r}
ggplot(data = cbg,
       aes(x= Year,
           y= gi_star))+
  geom_line()+
  theme_light()
```

### Interactive Man Kendall Plot

```{r}
p <- ggplot (data= cbg,
             aes( x= Year,
                  y= gi_star))+
  geom_line()+
  theme_light()

ggplotly(p)
```

### Printing Man Kendall test report

```{r}
cbg %>%
  summarise(mk = list(
    unclass(
      Kendall::MannKendall(gi_star))))%>%
  tidyr::unnest_wider(mk)
```

sl is the p-value. 0.0074 is less than 0.05 reject null hypothesis.

### Mann-Kendall test data.frame

-   for all locations

```{r}
ehsa <- gi_stars %>%
  group_by (County) %>%
  summarise (mk = list(
    unclass(
      Kendall::MannKendall(gi_star)))) %>%
  tidyr::unnest_wider(mk)
head(ehsa)
```

::: callout-note
## After viewing this, plot some of the locations using the code chunk above to see what the relationship is like. See positive increasing trend and negative.
:::

## Performing Emerging Hotspot Analysis

to be more sure of the classification that we labeled from Mann Kendall.

```{r}
ehsa <- emerging_hotspot_analysis(
  x= GDPPC_st,
  .var= "GDPPC",
  k = 1,
  nsim =99
)
```

::: callout-note
## There will be a classification column added.
:::

```{r}
ggplot(data =ehsa,
       aes(x = classification)) +
    geom_bar()
```

```{r}
hunan_ehsa <- hunan %>%
  left_join(ehsa,
            by = join_by(County==location))
```

```{r}
ehsa_sig <- hunan_ehsa %>%
  filter(p_value <0.05)

tmap_mode('plot')
tm_shape(hunan_ehsa)+
  tm_polygons()+
  tm_borders(alpha =0.5)+
tm_shape(ehsa_sig)+
  tm_fill("classification") +
  tm_borders(alpha =0.5)
```

Backtrack interpretation from here and talk about mann kendall test plot.

Use emerging hotspot pvalue as there is simulations
